name: Go Build

on:
  push:
    branches:
      - "*"
      - "!badges"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    #          - macos-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - uses: actions/setup-go@v4
        with:
          go-version: "1.16.1"
          check-latest: true

      - name: Build Application
        id: "go-build"
        continue-on-error: true
        shell: bash
        #if: runner.os == 'ubuntu'
        run: |
          label="go-build"
          echo "##[set-output name=label;]${label}"
          cd compte && go build compte.go
          res=$?
          if [ $res -eq 0 ]
          then
            retour="passing"
            color="green"
          else
            retour="failing"
            color="red"
          fi
          echo "##[set-output name=status;]${retour}"
          echo "##[set-output name=color;]${color}"

      # switch to badges branch
      - run: |
          git checkout badge_go || git checkout -b badge_go
          test -d .github/badges || mkdir -p .github/badges

      # create badge
      - name: badge
        uses: emibcn/badge-action@v1.2.1
        with:
          label: ${{ steps.go-build.outputs.label }}
          status: ${{ steps.go-build.outputs.status || 'failing' }}
          color: ${{ steps.go-build.outputs.color || 'red' }}
          path: ".github/badges/badge_go.svg"

      # commit and push badges if badges have changed
      - name: Commit changes to badge
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add '.github/badges/badge_go.svg'
          git commit -m "Add/Update badge_go" || exit 0
          git push -f origin badge_go
